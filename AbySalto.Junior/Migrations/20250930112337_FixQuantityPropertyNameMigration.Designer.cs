// <auto-generated />
using System;
using AbySalto.Junior.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AbySalto.Junior.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250930112337_FixQuantityPropertyNameMigration")]
    partial class FixQuantityPropertyNameMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AbySalto.Junior.Models.Articles.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ArticleId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            CurrencyId = 2,
                            Name = "Lasagna",
                            Price = 10.99m
                        },
                        new
                        {
                            ArticleId = 2,
                            CurrencyId = 1,
                            Name = "Beefsteak",
                            Price = 35.19m
                        },
                        new
                        {
                            ArticleId = 3,
                            CurrencyId = 3,
                            Name = "Pizza Margherita",
                            Price = 1743m
                        },
                        new
                        {
                            ArticleId = 4,
                            CurrencyId = 3,
                            Name = "Spaghetti Carbonara",
                            Price = 2090m
                        },
                        new
                        {
                            ArticleId = 5,
                            CurrencyId = 2,
                            Name = "Rumpsteak",
                            Price = 35m
                        },
                        new
                        {
                            ArticleId = 6,
                            CurrencyId = 1,
                            Name = "Goulash",
                            Price = 10.55m
                        },
                        new
                        {
                            ArticleId = 7,
                            CurrencyId = 1,
                            Name = "Meatballs",
                            Price = 15.24m
                        });
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Currencies.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            CurrencyId = 1,
                            Code = "USD",
                            Name = "US Dollar"
                        },
                        new
                        {
                            CurrencyId = 2,
                            Code = "EUR",
                            Name = "Euro"
                        },
                        new
                        {
                            CurrencyId = 3,
                            Code = "JPY",
                            Name = "Japanese Yen"
                        });
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Currencies.ExchangeRate", b =>
                {
                    b.Property<int>("ExchangeRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExchangeRateId"));

                    b.Property<int>("FromCurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ToCurrencyId")
                        .HasColumnType("int");

                    b.HasKey("ExchangeRateId");

                    b.HasIndex("FromCurrencyId");

                    b.HasIndex("ToCurrencyId");

                    b.ToTable("ExchangeRates");

                    b.HasData(
                        new
                        {
                            ExchangeRateId = 1,
                            FromCurrencyId = 1,
                            Rate = 0.95m,
                            ToCurrencyId = 2
                        },
                        new
                        {
                            ExchangeRateId = 2,
                            FromCurrencyId = 1,
                            Rate = 110m,
                            ToCurrencyId = 3
                        },
                        new
                        {
                            ExchangeRateId = 3,
                            FromCurrencyId = 2,
                            Rate = 1.05m,
                            ToCurrencyId = 1
                        },
                        new
                        {
                            ExchangeRateId = 4,
                            FromCurrencyId = 2,
                            Rate = 174.24m,
                            ToCurrencyId = 3
                        },
                        new
                        {
                            ExchangeRateId = 5,
                            FromCurrencyId = 3,
                            Rate = 0.0067m,
                            ToCurrencyId = 1
                        },
                        new
                        {
                            ExchangeRateId = 6,
                            FromCurrencyId = 3,
                            Rate = 0.0057m,
                            ToCurrencyId = 2
                        });
                });

            modelBuilder.Entity("AbySalto.Junior.Models.OrderArticles.OrderArticle", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ArticleId");

                    b.HasIndex("ArticleId");

                    b.ToTable("OrderArticle");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Orders.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Articles.Article", b =>
                {
                    b.HasOne("AbySalto.Junior.Models.Currencies.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Currencies.ExchangeRate", b =>
                {
                    b.HasOne("AbySalto.Junior.Models.Currencies.Currency", "FromCurrency")
                        .WithMany()
                        .HasForeignKey("FromCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AbySalto.Junior.Models.Currencies.Currency", "ToCurrency")
                        .WithMany()
                        .HasForeignKey("ToCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromCurrency");

                    b.Navigation("ToCurrency");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.OrderArticles.OrderArticle", b =>
                {
                    b.HasOne("AbySalto.Junior.Models.Articles.Article", "Article")
                        .WithMany("OrderArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AbySalto.Junior.Models.Orders.Order", "Order")
                        .WithMany("OrderArticles")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Orders.Order", b =>
                {
                    b.HasOne("AbySalto.Junior.Models.Currencies.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Articles.Article", b =>
                {
                    b.Navigation("OrderArticles");
                });

            modelBuilder.Entity("AbySalto.Junior.Models.Orders.Order", b =>
                {
                    b.Navigation("OrderArticles");
                });
#pragma warning restore 612, 618
        }
    }
}
